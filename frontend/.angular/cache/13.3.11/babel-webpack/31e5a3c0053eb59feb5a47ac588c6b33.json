{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nexport let PracticeLogCommandBarComponent = /*#__PURE__*/(() => {\n  class PracticeLogCommandBarComponent {\n    constructor(router) {\n      this.router = router;\n      this.action = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    emitAction(action) {\n      this.action.emit(action);\n    }\n\n    logOut() {\n      localStorage.removeItem('token');\n      this.router.navigateByUrl('/login').then();\n    }\n\n  }\n\n  PracticeLogCommandBarComponent.ɵfac = function PracticeLogCommandBarComponent_Factory(t) {\n    return new (t || PracticeLogCommandBarComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  PracticeLogCommandBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PracticeLogCommandBarComponent,\n    selectors: [[\"app-practice-log-command-bar\"]],\n    outputs: {\n      action: \"action\"\n    },\n    decls: 15,\n    vars: 0,\n    consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", \"data-cy\", \"create\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"data-cy\", \"delete-all\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"danger\", \"data-cy\", \"logout\", 3, \"click\"]],\n    template: function PracticeLogCommandBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\")(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function PracticeLogCommandBarComponent_Template_button_click_2_listener() {\n          return ctx.emitAction(0);\n        });\n        i0.ɵɵelementStart(3, \"mat-icon\");\n        i0.ɵɵtext(4, \"fiber_new\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" Create \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" \\u00A0 \");\n        i0.ɵɵelementStart(7, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function PracticeLogCommandBarComponent_Template_button_click_7_listener() {\n          return ctx.emitAction(1);\n        });\n        i0.ɵɵelementStart(8, \"mat-icon\");\n        i0.ɵɵtext(9, \"delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" Delete All \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function PracticeLogCommandBarComponent_Template_button_click_11_listener() {\n          return ctx.logOut();\n        });\n        i0.ɵɵelementStart(12, \"mat-icon\");\n        i0.ɵɵtext(13, \"logout\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" logout \");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    directives: [i2.MatToolbar, i3.MatButton, i4.MatIcon],\n    encapsulation: 2\n  });\n  return PracticeLogCommandBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}