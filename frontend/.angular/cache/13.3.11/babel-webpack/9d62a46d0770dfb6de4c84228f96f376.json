{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addPracticeLogState, modifyPracticeLogState, removeAllPracticeLogState, removePracticeLogState, setPracticeLogList } from './practice-log.actions';\nexport const initialState = {\n  practiceLogs: []\n};\nexport const practiceLogReducer = createReducer(initialState, on(setPracticeLogList, (state, {\n  practiceLogs\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    practiceLogs\n  });\n}), on(removePracticeLogState, (state, {\n  practiceLogId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    practiceLogs: state.practiceLogs.filter(data => data.id != practiceLogId)\n  });\n}), on(addPracticeLogState, (state, {\n  practiceLog\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    practiceLogs: [...state.practiceLogs, practiceLog]\n  });\n}), on(modifyPracticeLogState, (state, {\n  practiceLog\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    practiceLogs: state.practiceLogs.map(data => data.id === practiceLog.id ? practiceLog : data)\n  });\n}), on(removeAllPracticeLogState, state => {\n  return Object.assign(Object.assign({}, state), {\n    practiceLogs: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}