{"ast":null,"code":"import { AuthActions } from '../../state/auth.actions';\nimport { selectError } from '../../state/auth.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"../../components/auth-form/auth-form.component\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(store, _snackBar) {\n      this.store = store;\n      this._snackBar = _snackBar;\n      this.error$ = this.store.select(selectError());\n      this.getError();\n    }\n\n    ngOnInit() {}\n\n    submit(data) {\n      this.store.dispatch({\n        type: AuthActions.CREATE_USER,\n        payload: data\n      });\n    }\n\n    getError() {\n      this.error$.subscribe(data => {\n        if (data) {\n          let snackBarRef = this._snackBar.open(data.message, \"Error\", {\n            duration: 2500\n          });\n        }\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"title\", \"Register\", 3, \"submitEmitter\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-auth-form\", 0);\n        i0.ɵɵlistener(\"submitEmitter\", function RegisterComponent_Template_app_auth_form_submitEmitter_0_listener($event) {\n          return ctx.submit($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i3.AuthFormComponent],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}